// <auto-generated />
using System;
using ECommerce.Data.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ECommerce.Data.Persistence.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    [Migration("20221005181418_Job")]
    partial class Job
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ECommerce.Data.Domain.AddressBook.City", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<long>("CountryID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PlateCode")
                        .HasColumnType("text");

                    b.Property<byte>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<long>("UserCreatedID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserModifiedID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("CountryID");

                    b.ToTable("City", "AddressBook");

                    b.HasData(
                        new
                        {
                            ID = 1L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2352),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2352),
                            Name = "Adana",
                            PlateCode = "01",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 2L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2356),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2356),
                            Name = "Adıyaman",
                            PlateCode = "02",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 3L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2358),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2357),
                            Name = "Afyon",
                            PlateCode = "03",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 4L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2359),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2358),
                            Name = "Ağrı",
                            PlateCode = "04",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 5L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2360),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2360),
                            Name = "Amasya",
                            PlateCode = "05",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 6L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2363),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2363),
                            Name = "Ankara",
                            PlateCode = "06",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 7L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2365),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2364),
                            Name = "Antalya",
                            PlateCode = "07",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 8L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2366),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2365),
                            Name = "Artvin",
                            PlateCode = "08",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 9L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2367),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2366),
                            Name = "Aydın",
                            PlateCode = "09",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 10L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2369),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2368),
                            Name = "Balıkesir",
                            PlateCode = "10",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 11L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2370),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2369),
                            Name = "Bilecik",
                            PlateCode = "11",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 12L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2372),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2371),
                            Name = "Bingöl",
                            PlateCode = "12",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 13L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2373),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2372),
                            Name = "Bitlis",
                            PlateCode = "13",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 14L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2374),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2373),
                            Name = "Bolu",
                            PlateCode = "14",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 15L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2375),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2375),
                            Name = "Burdur",
                            PlateCode = "15",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 16L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2376),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2376),
                            Name = "Bursa",
                            PlateCode = "16",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 17L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2378),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2378),
                            Name = "Çanakkale",
                            PlateCode = "17",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 18L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2380),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2380),
                            Name = "Çankırı",
                            PlateCode = "18",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 19L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2381),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2381),
                            Name = "Çorum",
                            PlateCode = "19",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 20L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2382),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2382),
                            Name = "Denizli",
                            PlateCode = "20",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 21L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2383),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2383),
                            Name = "Diyarbakır",
                            PlateCode = "21",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 22L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2384),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2384),
                            Name = "Edirne",
                            PlateCode = "22",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 23L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2386),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2386),
                            Name = "Elazığ",
                            PlateCode = "23",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 24L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2388),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2387),
                            Name = "Erzincan",
                            PlateCode = "24",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 25L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2390),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2389),
                            Name = "Erzurum",
                            PlateCode = "25",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 26L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2391),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2390),
                            Name = "Eskişehir",
                            PlateCode = "26",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 27L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2392),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2391),
                            Name = "Gaziantep",
                            PlateCode = "27",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 28L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2393),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2393),
                            Name = "Giresun",
                            PlateCode = "28",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 29L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2394),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2394),
                            Name = "Gümüşhane",
                            PlateCode = "29",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 30L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2395),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2395),
                            Name = "Hakkari",
                            PlateCode = "30",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 31L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2396),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2396),
                            Name = "Hatay",
                            PlateCode = "31",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 32L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2398),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2398),
                            Name = "Isparta",
                            PlateCode = "32",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 33L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2399),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2399),
                            Name = "İçel",
                            PlateCode = "33",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 34L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2401),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2401),
                            Name = "İstanbul",
                            PlateCode = "34",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 35L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2402),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2402),
                            Name = "İzmir",
                            PlateCode = "35",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 36L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2403),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2403),
                            Name = "Kars",
                            PlateCode = "36",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 37L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2405),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2404),
                            Name = "Kastamonu",
                            PlateCode = "37",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 38L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2406),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2405),
                            Name = "Kayseri",
                            PlateCode = "38",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 39L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2407),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2407),
                            Name = "Kırklareli",
                            PlateCode = "39",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 40L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2408),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2408),
                            Name = "Kırşehir",
                            PlateCode = "40",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 41L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2452),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2452),
                            Name = "Kocaeli",
                            PlateCode = "41",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 42L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2454),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2454),
                            Name = "Konya",
                            PlateCode = "42",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 43L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2455),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2455),
                            Name = "Kütahya",
                            PlateCode = "43",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 44L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2456),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2456),
                            Name = "Malatya",
                            PlateCode = "44",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 45L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2457),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2457),
                            Name = "Manisa",
                            PlateCode = "45",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 46L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2459),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2458),
                            Name = "Kahramanmaraş",
                            PlateCode = "46",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 47L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2460),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2459),
                            Name = "Mardin",
                            PlateCode = "47",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 48L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2461),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2460),
                            Name = "Muğla",
                            PlateCode = "48",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 49L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2462),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2461),
                            Name = "Muş",
                            PlateCode = "49",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 50L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2463),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2462),
                            Name = "Nevşehir",
                            PlateCode = "50",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 51L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2464),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2463),
                            Name = "Niğde",
                            PlateCode = "51",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 52L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2465),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2465),
                            Name = "Ordu",
                            PlateCode = "52",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 53L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2466),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2466),
                            Name = "Rize",
                            PlateCode = "53",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 54L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2467),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2467),
                            Name = "Sakarya",
                            PlateCode = "54",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 55L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2468),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2468),
                            Name = "Samsun",
                            PlateCode = "55",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 56L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2469),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2469),
                            Name = "Siirt",
                            PlateCode = "56",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 57L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2471),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2470),
                            Name = "Sinop",
                            PlateCode = "57",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 58L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2472),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2471),
                            Name = "Sivas",
                            PlateCode = "58",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 59L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2473),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2472),
                            Name = "Tekirdağ",
                            PlateCode = "59",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 60L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2474),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2473),
                            Name = "Tokat",
                            PlateCode = "60",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 61L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2475),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2474),
                            Name = "Trabzon",
                            PlateCode = "61",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 62L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2476),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2476),
                            Name = "Tunceli",
                            PlateCode = "62",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 63L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2477),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2477),
                            Name = "Şanlıurfa",
                            PlateCode = "63",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 64L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2478),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2478),
                            Name = "Uşak",
                            PlateCode = "64",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 65L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2479),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2479),
                            Name = "Van",
                            PlateCode = "65",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 66L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2482),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2481),
                            Name = "Yozgat",
                            PlateCode = "66",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 67L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2483),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2482),
                            Name = "Zonguldak",
                            PlateCode = "67",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 68L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2484),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2483),
                            Name = "Aksaray",
                            PlateCode = "68",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 69L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2485),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2484),
                            Name = "Bayburt",
                            PlateCode = "69",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 70L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2486),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2485),
                            Name = "Karaman",
                            PlateCode = "70",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 71L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2487),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2487),
                            Name = "Kırıkkale",
                            PlateCode = "71",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 72L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2488),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2488),
                            Name = "Batman",
                            PlateCode = "72",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 73L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2489),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2489),
                            Name = "Şırnak",
                            PlateCode = "73",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 74L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2490),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2490),
                            Name = "Bartın",
                            PlateCode = "74",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 75L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2492),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2491),
                            Name = "Ardahan",
                            PlateCode = "75",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 76L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2493),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2492),
                            Name = "Iğdır",
                            PlateCode = "76",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 77L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2494),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2493),
                            Name = "Yalova",
                            PlateCode = "77",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 78L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2495),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2494),
                            Name = "Karabük",
                            PlateCode = "78",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 79L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2496),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2496),
                            Name = "Kilis",
                            PlateCode = "79",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 80L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2497),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2497),
                            Name = "Osmaniye",
                            PlateCode = "80",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 81L,
                            CountryID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2498),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2498),
                            Name = "Düzce",
                            PlateCode = "81",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        });
                });

            modelBuilder.Entity("ECommerce.Data.Domain.AddressBook.Country", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CodeISO")
                        .HasColumnType("text");

                    b.Property<string>("CodeISO3")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PhoneCode")
                        .HasColumnType("text");

                    b.Property<byte>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<long>("UserCreatedID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserModifiedID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("Country", "AddressBook");

                    b.HasData(
                        new
                        {
                            ID = 1L,
                            CodeISO = "TR",
                            CodeISO3 = "TUR",
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2264),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2251),
                            Name = "Türkite",
                            PhoneCode = "90",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        });
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Catalog.Category", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<byte>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<long>("UserCreatedID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserModifiedID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("Category", "Catalog");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Catalog.Category_i18n", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<long>("CategoryID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("LanguageID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<byte>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<long>("UserCreatedID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserModifiedID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("LanguageID");

                    b.ToTable("Category_i18n", "Catalog");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Catalog.Product", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<long>("CategoryID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ImagePath")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<byte>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<long>("UserCreatedID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserModifiedID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Product", "Catalog");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Catalog.Product_i18n", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<long>("LanguageID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<long>("ProductID")
                        .HasColumnType("bigint");

                    b.Property<byte>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<long>("UserCreatedID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserModifiedID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("LanguageID");

                    b.HasIndex("ProductID");

                    b.ToTable("Product_i18n", "Catalog");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Configuration.Job", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<byte>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<long>("UserCreatedID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserModifiedID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("Job", "Configuration");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Configuration.JobExecution", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<byte>("JobExecutionType")
                        .HasColumnType("smallint");

                    b.Property<long>("JobID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<byte>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<long>("UserCreatedID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserModifiedID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("JobID");

                    b.ToTable("JobExecution", "Configuration");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Configuration.JobExecutionDetail", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<long>("JobExecutionID")
                        .HasColumnType("bigint");

                    b.Property<byte>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<long>("UserCreatedID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserModifiedID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("JobExecutionID");

                    b.ToTable("JobExecutionDetail", "Configuration");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Configuration.Language", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CultureCode")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("IconName")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("IsoCode")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<byte>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<long>("UserCreatedID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserModifiedID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("Language", "Configuration");

                    b.HasData(
                        new
                        {
                            ID = 1L,
                            CultureCode = "tr",
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(3095),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(3095),
                            IsoCode = "tr",
                            Name = "Türkçe",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 2L,
                            CultureCode = "en",
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(3099),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(3099),
                            IsoCode = "en",
                            Name = "English",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        });
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Configuration.Parameter", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Module")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<byte>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<long>("UserCreatedID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserModifiedID")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Parameter", "Configuration");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Logging.AuditLog", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("AffectedColumns")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NewValues")
                        .HasColumnType("text");

                    b.Property<string>("OldValues")
                        .HasColumnType("text");

                    b.Property<string>("PrimaryKey")
                        .HasColumnType("text");

                    b.Property<byte>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<string>("TableName")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.Property<long>("UserCreatedID")
                        .HasColumnType("bigint");

                    b.Property<string>("UserID")
                        .HasColumnType("text");

                    b.Property<long>("UserModifiedID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("AuditLog", "Logging");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Logging.ExceptionLog", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FunctionName")
                        .HasColumnType("text");

                    b.Property<string>("IPAddress")
                        .HasColumnType("text");

                    b.Property<string>("MachineName")
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<string>("SessionID")
                        .HasColumnType("text");

                    b.Property<string>("StackTrace")
                        .HasColumnType("text");

                    b.Property<byte>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<string>("UserAgent")
                        .HasColumnType("text");

                    b.Property<long>("UserCreatedID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserModifiedID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("ExceptionLog", "Logging");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Membership.Permission", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<byte>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<long>("UserCreatedID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserModifiedID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("Permission", "Membership");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Membership.Role", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<byte>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<long>("UserCreatedID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserModifiedID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("Role", "Membership");

                    b.HasData(
                        new
                        {
                            ID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2704),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2703),
                            Name = "Admin",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 2L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2708),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(2707),
                            Name = "User",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        });
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Membership.RolePermission", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("PermissionID")
                        .HasColumnType("bigint");

                    b.Property<long>("RoleID")
                        .HasColumnType("bigint");

                    b.Property<byte>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<long>("UserCreatedID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserModifiedID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("PermissionID");

                    b.HasIndex("RoleID");

                    b.ToTable("RolePermission", "Membership");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Membership.User", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<string>("ImagePath")
                        .HasColumnType("text");

                    b.Property<bool>("IsGlobalAdmin")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("bytea");

                    b.Property<long?>("RoleID")
                        .HasColumnType("bigint");

                    b.Property<byte>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.Property<long>("UserCreatedID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserModifiedID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.ToTable("User", "Membership");

                    b.HasData(
                        new
                        {
                            ID = 1L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(3059),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(3058),
                            EmailAddress = "admin@admin.com",
                            FullName = "Admin Admin",
                            IsGlobalAdmin = true,
                            Name = "Admin",
                            PasswordHash = new byte[] { 200, 9, 188, 200, 52, 166, 170, 108, 230, 20, 116, 120, 114, 75, 31, 219, 175, 166, 30, 90, 61, 45, 193, 90, 167, 211, 11, 167, 32, 164, 7, 131, 107, 84, 21, 5, 1, 149, 208, 180, 50, 2, 146, 175, 219, 134, 25, 189, 84, 114, 173, 197, 77, 9, 103, 203, 224, 36, 243, 2, 161, 80, 178, 141 },
                            PasswordSalt = new byte[] { 36, 151, 123, 184, 134, 245, 186, 147, 226, 7, 167, 166, 114, 36, 201, 245, 98, 124, 43, 160, 151, 96, 205, 93, 0, 178, 252, 192, 233, 149, 233, 20, 233, 87, 148, 144, 237, 72, 167, 130, 148, 251, 101, 216, 242, 63, 180, 199, 53, 248, 70, 29, 80, 182, 226, 74, 116, 145, 214, 208, 43, 58, 24, 211, 45, 140, 218, 164, 12, 224, 37, 246, 17, 174, 100, 255, 181, 150, 254, 164, 200, 111, 212, 201, 151, 59, 26, 158, 135, 6, 138, 31, 174, 207, 56, 54, 225, 56, 33, 97, 34, 102, 104, 150, 95, 221, 112, 215, 255, 171, 233, 123, 127, 107, 93, 230, 56, 204, 15, 148, 146, 161, 5, 239, 191, 68, 38, 150 },
                            RoleID = 1L,
                            StatusID = (byte)1,
                            Surname = "Admin",
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 2L,
                            DateCreated = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(3066),
                            DateModified = new DateTime(2022, 10, 5, 21, 14, 18, 428, DateTimeKind.Local).AddTicks(3066),
                            EmailAddress = "user@user.com",
                            FullName = "User User",
                            IsGlobalAdmin = false,
                            Name = "User",
                            PasswordHash = new byte[] { 200, 9, 188, 200, 52, 166, 170, 108, 230, 20, 116, 120, 114, 75, 31, 219, 175, 166, 30, 90, 61, 45, 193, 90, 167, 211, 11, 167, 32, 164, 7, 131, 107, 84, 21, 5, 1, 149, 208, 180, 50, 2, 146, 175, 219, 134, 25, 189, 84, 114, 173, 197, 77, 9, 103, 203, 224, 36, 243, 2, 161, 80, 178, 141 },
                            PasswordSalt = new byte[] { 36, 151, 123, 184, 134, 245, 186, 147, 226, 7, 167, 166, 114, 36, 201, 245, 98, 124, 43, 160, 151, 96, 205, 93, 0, 178, 252, 192, 233, 149, 233, 20, 233, 87, 148, 144, 237, 72, 167, 130, 148, 251, 101, 216, 242, 63, 180, 199, 53, 248, 70, 29, 80, 182, 226, 74, 116, 145, 214, 208, 43, 58, 24, 211, 45, 140, 218, 164, 12, 224, 37, 246, 17, 174, 100, 255, 181, 150, 254, 164, 200, 111, 212, 201, 151, 59, 26, 158, 135, 6, 138, 31, 174, 207, 56, 54, 225, 56, 33, 97, 34, 102, 104, 150, 95, 221, 112, 215, 255, 171, 233, 123, 127, 107, 93, 230, 56, 204, 15, 148, 146, 161, 5, 239, 191, 68, 38, 150 },
                            RoleID = 2L,
                            StatusID = (byte)1,
                            Surname = "User",
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        });
                });

            modelBuilder.Entity("ECommerce.Data.Domain.AddressBook.City", b =>
                {
                    b.HasOne("ECommerce.Data.Domain.AddressBook.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Catalog.Category_i18n", b =>
                {
                    b.HasOne("ECommerce.Data.Domain.Catalog.Category", "Category")
                        .WithMany("Category_i18n")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Data.Domain.Configuration.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Catalog.Product", b =>
                {
                    b.HasOne("ECommerce.Data.Domain.Catalog.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Catalog.Product_i18n", b =>
                {
                    b.HasOne("ECommerce.Data.Domain.Configuration.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Data.Domain.Catalog.Product", "Product")
                        .WithMany("Product_i18n")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Configuration.JobExecution", b =>
                {
                    b.HasOne("ECommerce.Data.Domain.Configuration.Job", "Job")
                        .WithMany()
                        .HasForeignKey("JobID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Configuration.JobExecutionDetail", b =>
                {
                    b.HasOne("ECommerce.Data.Domain.Configuration.JobExecution", "JobExecution")
                        .WithMany()
                        .HasForeignKey("JobExecutionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobExecution");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Membership.RolePermission", b =>
                {
                    b.HasOne("ECommerce.Data.Domain.Membership.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Data.Domain.Membership.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Membership.User", b =>
                {
                    b.HasOne("ECommerce.Data.Domain.Membership.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.AddressBook.Country", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Catalog.Category", b =>
                {
                    b.Navigation("Category_i18n");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Catalog.Product", b =>
                {
                    b.Navigation("Product_i18n");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Membership.Role", b =>
                {
                    b.Navigation("RolePermissions");
                });
#pragma warning restore 612, 618
        }
    }
}
