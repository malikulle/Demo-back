// <auto-generated />
using System;
using ECommerce.Data.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ECommerce.Data.Persistence.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    [Migration("20221008154946_ProductComment")]
    partial class ProductComment
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ECommerce.Data.Domain.AddressBook.City", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<long>("CountryID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PlateCode")
                        .HasColumnType("text");

                    b.Property<byte>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<long>("UserCreatedID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserModifiedID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("CountryID");

                    b.ToTable("City", "AddressBook");

                    b.HasData(
                        new
                        {
                            ID = 1L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adana",
                            PlateCode = "01",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 2L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adıyaman",
                            PlateCode = "02",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 3L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Afyon",
                            PlateCode = "03",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 4L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ağrı",
                            PlateCode = "04",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 5L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Amasya",
                            PlateCode = "05",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 6L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ankara",
                            PlateCode = "06",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 7L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Antalya",
                            PlateCode = "07",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 8L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Artvin",
                            PlateCode = "08",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 9L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Aydın",
                            PlateCode = "09",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 10L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Balıkesir",
                            PlateCode = "10",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 11L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bilecik",
                            PlateCode = "11",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 12L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bingöl",
                            PlateCode = "12",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 13L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bitlis",
                            PlateCode = "13",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 14L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bolu",
                            PlateCode = "14",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 15L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Burdur",
                            PlateCode = "15",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 16L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bursa",
                            PlateCode = "16",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 17L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Çanakkale",
                            PlateCode = "17",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 18L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Çankırı",
                            PlateCode = "18",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 19L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Çorum",
                            PlateCode = "19",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 20L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Denizli",
                            PlateCode = "20",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 21L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Diyarbakır",
                            PlateCode = "21",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 22L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Edirne",
                            PlateCode = "22",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 23L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Elazığ",
                            PlateCode = "23",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 24L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Erzincan",
                            PlateCode = "24",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 25L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Erzurum",
                            PlateCode = "25",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 26L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Eskişehir",
                            PlateCode = "26",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 27L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gaziantep",
                            PlateCode = "27",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 28L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Giresun",
                            PlateCode = "28",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 29L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gümüşhane",
                            PlateCode = "29",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 30L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Hakkari",
                            PlateCode = "30",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 31L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Hatay",
                            PlateCode = "31",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 32L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Isparta",
                            PlateCode = "32",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 33L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "İçel",
                            PlateCode = "33",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 34L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "İstanbul",
                            PlateCode = "34",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 35L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "İzmir",
                            PlateCode = "35",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 36L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kars",
                            PlateCode = "36",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 37L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kastamonu",
                            PlateCode = "37",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 38L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kayseri",
                            PlateCode = "38",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 39L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kırklareli",
                            PlateCode = "39",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 40L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kırşehir",
                            PlateCode = "40",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 41L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kocaeli",
                            PlateCode = "41",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 42L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Konya",
                            PlateCode = "42",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 43L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kütahya",
                            PlateCode = "43",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 44L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Malatya",
                            PlateCode = "44",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 45L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Manisa",
                            PlateCode = "45",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 46L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kahramanmaraş",
                            PlateCode = "46",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 47L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mardin",
                            PlateCode = "47",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 48L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Muğla",
                            PlateCode = "48",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 49L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Muş",
                            PlateCode = "49",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 50L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nevşehir",
                            PlateCode = "50",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 51L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Niğde",
                            PlateCode = "51",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 52L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ordu",
                            PlateCode = "52",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 53L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Rize",
                            PlateCode = "53",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 54L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sakarya",
                            PlateCode = "54",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 55L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Samsun",
                            PlateCode = "55",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 56L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Siirt",
                            PlateCode = "56",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 57L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sinop",
                            PlateCode = "57",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 58L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sivas",
                            PlateCode = "58",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 59L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tekirdağ",
                            PlateCode = "59",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 60L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tokat",
                            PlateCode = "60",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 61L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Trabzon",
                            PlateCode = "61",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 62L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tunceli",
                            PlateCode = "62",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 63L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Şanlıurfa",
                            PlateCode = "63",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 64L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Uşak",
                            PlateCode = "64",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 65L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Van",
                            PlateCode = "65",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 66L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Yozgat",
                            PlateCode = "66",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 67L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Zonguldak",
                            PlateCode = "67",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 68L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Aksaray",
                            PlateCode = "68",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 69L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bayburt",
                            PlateCode = "69",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 70L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Karaman",
                            PlateCode = "70",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 71L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kırıkkale",
                            PlateCode = "71",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 72L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Batman",
                            PlateCode = "72",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 73L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Şırnak",
                            PlateCode = "73",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 74L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bartın",
                            PlateCode = "74",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 75L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ardahan",
                            PlateCode = "75",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 76L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Iğdır",
                            PlateCode = "76",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 77L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Yalova",
                            PlateCode = "77",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 78L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Karabük",
                            PlateCode = "78",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 79L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kilis",
                            PlateCode = "79",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 80L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Osmaniye",
                            PlateCode = "80",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 81L,
                            CountryID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Düzce",
                            PlateCode = "81",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        });
                });

            modelBuilder.Entity("ECommerce.Data.Domain.AddressBook.Country", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CodeISO")
                        .HasColumnType("text");

                    b.Property<string>("CodeISO3")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PhoneCode")
                        .HasColumnType("text");

                    b.Property<byte>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<long>("UserCreatedID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserModifiedID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("Country", "AddressBook");

                    b.HasData(
                        new
                        {
                            ID = 1L,
                            CodeISO = "TR",
                            CodeISO3 = "TUR",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Türkite",
                            PhoneCode = "90",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        });
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Catalog.Category", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<byte>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<long>("UserCreatedID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserModifiedID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("Category", "Catalog");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Catalog.Category_i18n", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<long>("CategoryID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("LanguageID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<byte>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<long>("UserCreatedID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserModifiedID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("LanguageID");

                    b.ToTable("Category_i18n", "Catalog");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Catalog.Product", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<long>("CategoryID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ImagePath")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<byte>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<long>("UserCreatedID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserModifiedID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Product", "Catalog");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Catalog.Product_i18n", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<long>("LanguageID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<long>("ProductID")
                        .HasColumnType("bigint");

                    b.Property<byte>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<long>("UserCreatedID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserModifiedID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("LanguageID");

                    b.HasIndex("ProductID");

                    b.ToTable("Product_i18n", "Catalog");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Catalog.ProductComment", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("ProductID")
                        .HasColumnType("bigint");

                    b.Property<byte>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<long>("UserCreatedID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserModifiedID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("ProductID");

                    b.HasIndex("UserID");

                    b.ToTable("ProductComment", "Catalog");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Configuration.Job", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<byte>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<long>("UserCreatedID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserModifiedID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("Job", "Configuration");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Configuration.JobExecution", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<byte>("JobExecutionType")
                        .HasColumnType("smallint");

                    b.Property<long>("JobID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<byte>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<long>("UserCreatedID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserModifiedID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("JobID");

                    b.ToTable("JobExecution", "Configuration");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Configuration.JobExecutionDetail", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<long>("JobExecutionID")
                        .HasColumnType("bigint");

                    b.Property<byte>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<long>("UserCreatedID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserModifiedID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("JobExecutionID");

                    b.ToTable("JobExecutionDetail", "Configuration");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Configuration.Language", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("CultureCode")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("IconName")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("IsoCode")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<byte>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<long>("UserCreatedID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserModifiedID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("Language", "Configuration");

                    b.HasData(
                        new
                        {
                            ID = 1L,
                            CultureCode = "tr",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsoCode = "tr",
                            Name = "Türkçe",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 2L,
                            CultureCode = "en",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsoCode = "en",
                            Name = "English",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        });
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Configuration.Parameter", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Module")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<byte>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<long>("UserCreatedID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserModifiedID")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Parameter", "Configuration");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Logging.AuditLog", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("AffectedColumns")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NewValues")
                        .HasColumnType("text");

                    b.Property<string>("OldValues")
                        .HasColumnType("text");

                    b.Property<string>("PrimaryKey")
                        .HasColumnType("text");

                    b.Property<byte>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<string>("TableName")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.Property<long>("UserCreatedID")
                        .HasColumnType("bigint");

                    b.Property<string>("UserID")
                        .HasColumnType("text");

                    b.Property<long>("UserModifiedID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("AuditLog", "Logging");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Logging.ExceptionLog", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FunctionName")
                        .HasColumnType("text");

                    b.Property<string>("IPAddress")
                        .HasColumnType("text");

                    b.Property<string>("MachineName")
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<string>("SessionID")
                        .HasColumnType("text");

                    b.Property<string>("StackTrace")
                        .HasColumnType("text");

                    b.Property<byte>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<string>("UserAgent")
                        .HasColumnType("text");

                    b.Property<long>("UserCreatedID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserModifiedID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("ExceptionLog", "Logging");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Membership.Permission", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<byte>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<long>("UserCreatedID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserModifiedID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("Permission", "Membership");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Membership.Role", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<byte>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<long>("UserCreatedID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserModifiedID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("Role", "Membership");

                    b.HasData(
                        new
                        {
                            ID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Admin",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 2L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "User",
                            StatusID = (byte)1,
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        });
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Membership.RolePermission", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("PermissionID")
                        .HasColumnType("bigint");

                    b.Property<long>("RoleID")
                        .HasColumnType("bigint");

                    b.Property<byte>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<long>("UserCreatedID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserModifiedID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("PermissionID");

                    b.HasIndex("RoleID");

                    b.ToTable("RolePermission", "Membership");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Membership.User", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<string>("ImagePath")
                        .HasColumnType("text");

                    b.Property<bool>("IsGlobalAdmin")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("bytea");

                    b.Property<long?>("RoleID")
                        .HasColumnType("bigint");

                    b.Property<byte>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.Property<long>("UserCreatedID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserModifiedID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.ToTable("User", "Membership");

                    b.HasData(
                        new
                        {
                            ID = 1L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "admin@admin.com",
                            FullName = "Admin Admin",
                            IsGlobalAdmin = true,
                            Name = "Admin",
                            PasswordHash = new byte[] { 4, 28, 10, 173, 157, 244, 19, 166, 52, 81, 90, 107, 46, 58, 11, 212, 228, 151, 161, 70, 65, 145, 146, 221, 10, 242, 62, 140, 23, 144, 122, 146, 205, 14, 180, 196, 155, 232, 24, 104, 211, 158, 148, 119, 139, 51, 246, 27, 186, 7, 152, 187, 120, 189, 1, 14, 119, 255, 65, 21, 16, 120, 160, 225 },
                            PasswordSalt = new byte[] { 171, 83, 100, 84, 95, 73, 239, 131, 236, 132, 218, 66, 96, 144, 69, 241, 55, 135, 10, 141, 132, 107, 176, 239, 9, 119, 32, 112, 172, 184, 163, 133, 177, 57, 122, 161, 22, 191, 154, 49, 149, 215, 66, 252, 251, 97, 132, 197, 81, 17, 155, 95, 40, 242, 41, 148, 204, 188, 25, 218, 69, 238, 78, 28, 168, 209, 160, 6, 139, 213, 162, 107, 184, 242, 198, 202, 34, 242, 203, 173, 240, 233, 49, 33, 1, 6, 193, 22, 214, 22, 136, 72, 150, 12, 230, 249, 130, 186, 252, 113, 23, 110, 10, 76, 230, 132, 217, 100, 125, 202, 135, 86, 186, 211, 25, 246, 191, 193, 29, 65, 17, 165, 233, 46, 92, 220, 28, 124 },
                            RoleID = 1L,
                            StatusID = (byte)1,
                            Surname = "Admin",
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        },
                        new
                        {
                            ID = 2L,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "user@user.com",
                            FullName = "User User",
                            IsGlobalAdmin = false,
                            Name = "User",
                            PasswordHash = new byte[] { 4, 28, 10, 173, 157, 244, 19, 166, 52, 81, 90, 107, 46, 58, 11, 212, 228, 151, 161, 70, 65, 145, 146, 221, 10, 242, 62, 140, 23, 144, 122, 146, 205, 14, 180, 196, 155, 232, 24, 104, 211, 158, 148, 119, 139, 51, 246, 27, 186, 7, 152, 187, 120, 189, 1, 14, 119, 255, 65, 21, 16, 120, 160, 225 },
                            PasswordSalt = new byte[] { 171, 83, 100, 84, 95, 73, 239, 131, 236, 132, 218, 66, 96, 144, 69, 241, 55, 135, 10, 141, 132, 107, 176, 239, 9, 119, 32, 112, 172, 184, 163, 133, 177, 57, 122, 161, 22, 191, 154, 49, 149, 215, 66, 252, 251, 97, 132, 197, 81, 17, 155, 95, 40, 242, 41, 148, 204, 188, 25, 218, 69, 238, 78, 28, 168, 209, 160, 6, 139, 213, 162, 107, 184, 242, 198, 202, 34, 242, 203, 173, 240, 233, 49, 33, 1, 6, 193, 22, 214, 22, 136, 72, 150, 12, 230, 249, 130, 186, 252, 113, 23, 110, 10, 76, 230, 132, 217, 100, 125, 202, 135, 86, 186, 211, 25, 246, 191, 193, 29, 65, 17, 165, 233, 46, 92, 220, 28, 124 },
                            RoleID = 2L,
                            StatusID = (byte)1,
                            Surname = "User",
                            UserCreatedID = 0L,
                            UserModifiedID = 0L
                        });
                });

            modelBuilder.Entity("ECommerce.Data.Domain.AddressBook.City", b =>
                {
                    b.HasOne("ECommerce.Data.Domain.AddressBook.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Catalog.Category_i18n", b =>
                {
                    b.HasOne("ECommerce.Data.Domain.Catalog.Category", "Category")
                        .WithMany("Category_i18n")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Data.Domain.Configuration.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Catalog.Product", b =>
                {
                    b.HasOne("ECommerce.Data.Domain.Catalog.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Catalog.Product_i18n", b =>
                {
                    b.HasOne("ECommerce.Data.Domain.Configuration.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Data.Domain.Catalog.Product", "Product")
                        .WithMany("Product_i18n")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Catalog.ProductComment", b =>
                {
                    b.HasOne("ECommerce.Data.Domain.Catalog.Product", "Product")
                        .WithMany("ProductComments")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Data.Domain.Membership.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Configuration.JobExecution", b =>
                {
                    b.HasOne("ECommerce.Data.Domain.Configuration.Job", "Job")
                        .WithMany()
                        .HasForeignKey("JobID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Configuration.JobExecutionDetail", b =>
                {
                    b.HasOne("ECommerce.Data.Domain.Configuration.JobExecution", "JobExecution")
                        .WithMany()
                        .HasForeignKey("JobExecutionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobExecution");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Membership.RolePermission", b =>
                {
                    b.HasOne("ECommerce.Data.Domain.Membership.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Data.Domain.Membership.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Membership.User", b =>
                {
                    b.HasOne("ECommerce.Data.Domain.Membership.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.AddressBook.Country", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Catalog.Category", b =>
                {
                    b.Navigation("Category_i18n");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Catalog.Product", b =>
                {
                    b.Navigation("ProductComments");

                    b.Navigation("Product_i18n");
                });

            modelBuilder.Entity("ECommerce.Data.Domain.Membership.Role", b =>
                {
                    b.Navigation("RolePermissions");
                });
#pragma warning restore 612, 618
        }
    }
}
